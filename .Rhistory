library(BiocManager)
library(DESeq2)
getwd()
counts <- read.csv("airway_scaledcounts.csv", stringsAsFactors = FALSE, row.names=1)
metadata <-  read.csv("airway_metadata.csv", stringsAsFactors = FALSE)
View(counts)
head(counts)
head(metadata)
control <- metadata[metadata[,"dex"]=="control",]
control.counts <- counts[ ,control$id]
control.mean <- rowSums( control.counts )/4
head(control.mean)
control
control
n.control <- sum(metadata$dex == "control")
n.control <- sum(metadata$dex == "control")
n.control
head(metadata)
library(dplyr)
control <- metadata %>% filter(dex=="control")
control.counts <- counts %>% select(control$id)
control.mean <- rowSums(control.counts)/4
head(control.mean)
control <- metadata %>% filter(dex=="control")
control.counts <- counts %>% select(control$id)
control.mean <- rowSums(control.counts)/4
head(control.mean)
treated <- metadata[metadata[,"dex"]=="treated",]
treated.mean <- rowSums( counts[ ,treated$id] )/4
names(treated.mean) <- counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated.mean <- rowMeans( counts[ ,treated$id] )
names(treated.mean) <- counts$ensgene
treated <- metadata[metadata[,"dex"]=="treated",]
treated.mean <- rowMeans( counts[ ,treated$id] )
names(treated.mean) <- counts$ensgene
meancounts <- data.frame(control.mean, treated.mean)
View(meancounts)
plot(control.mnea, treated.mean, data=meancounts)
plot(control.mean, treated.mean, data=meancounts)
plot(control.mean, treated.mean)
count_plot <- plot(control.mean, treated.mean)
count_plot
library(ggplot2)
count_plot_log <- plot(control.mean, treated.mean, log="xy")
count_plot_log
count_plot_log <- plot(control.mean, treated.mean, log="xy",
xlab="log control counts",
ylab="log treated counts")
count_plot_log
meancounts$log2fc <- log2(meancounts[,"treated.mean"]/meancounts[,"control.mean"])
head(meancounts)
zero.vals <- which(meancounts[,1:2]==0, arr.ind=TRUE)
to.rm <- unique(zero.vals[,1])
mycounts <- meancounts[-to.rm,]
head(mycounts)
sum(up.ind)
up.ind <- mycounts$log2fc > 2
down.ind <- mycounts$log2fc < (-2)
sum(up.ind)
sum(down.ind)
citation("DESeq2")
dds <- DESeqDataSetFromMatrix(countData=counts,
colData=metadata,
design=~dex)
dds
results(dds)
dds <- DESeq(dds)
results(dds)
dds <- DESeq(dds)
res <- results(dds)
res
summary(res)
res05 <- results(dds, alpha=0.05)
summary(res05)
library("AnnotationDbi")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
res$symbol <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="SYMBOL",          # The new format we want to add
multiVals="first")
res$symbol <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="SYMBOL",          # The new format we want to add
multiVals="first")
head(res)
res$entrez <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="ENTREZID",          # The new format we want to add
multiVals="first")
res$uniprot <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="UNIPROT",          # The new format we want to add
multiVals="first")
res$genename <- mapIds(org.Hs.eg.db,
keys=row.names(res), # Our genenames
keytype="ENSEMBL",        # The format of our genenames
column="GENENAME",          # The new format we want to add
multiVals="first")
head(res)
ord <- order( res$padj )
#View(res[ord,])
head(res[ord,])
write.csv(res[ord,], "deseq_results.csv")
plot( res$log2FoldChange,  -log(res$padj),
xlab="Log2(FoldChange)",
ylab="-Log(P-value)")
plot( res$log2FoldChange,  -log(res$padj),
ylab="-Log(P-value)", xlab="Log2(FoldChange)")
# Add some cut-off lines
abline(v=c(-2,2), col="darkgray", lty=2)
abline(h=-log(0.05), col="darkgray", lty=2)
plot( res$log2FoldChange,  -log(res$padj),
xlab="Log2(FoldChange)",
ylab="-Log(P-value)")
# Setup our custom point color vector
mycols <- rep("gray", nrow(res))
mycols[ abs(res$log2FoldChange) > 2 ]  <- "red"
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"
# Volcano plot with custom colors
plot( res$log2FoldChange,  -log(res$padj),
col=mycols, ylab="-Log(P-value)", xlab="Log2(FoldChange)" )
# Cut-off lines
abline(v=c(-2,2), col="gray", lty=2)
abline(h=-log(0.1), col="gray", lty=2)
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
x <- as.data.frame(res)
EnhancedVolcano(x,
lab = x$symbol,
x = 'log2FoldChange',
y = 'pvalue')
BiocManager::install( c("pathview", "gage", "gageData") )
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)
# Examine the first 2 pathways in this kegg set for humans
head(kegg.sets.hs, 2)
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
attributes(keggres)
head(keggres$less, 3)
pathview(gene.data=foldchanges, pathway.id="hsa05310")
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa05310", kegg.native=FALSE)
